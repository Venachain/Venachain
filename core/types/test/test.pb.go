// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.17.3
// source: test.proto

package test

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type BlockPro struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Age  int64    `protobuf:"varint,2,opt,name=age,proto3" json:"age,omitempty"`
	Book []string `protobuf:"bytes,4,rep,name=book,proto3" json:"book,omitempty"`
}

func (x *BlockPro) Reset() {
	*x = BlockPro{}
	if protoimpl.UnsafeEnabled {
		mi := &file_test_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlockPro) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockPro) ProtoMessage() {}

func (x *BlockPro) ProtoReflect() protoreflect.Message {
	mi := &file_test_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockPro.ProtoReflect.Descriptor instead.
func (*BlockPro) Descriptor() ([]byte, []int) {
	return file_test_proto_rawDescGZIP(), []int{0}
}

func (x *BlockPro) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *BlockPro) GetAge() int64 {
	if x != nil {
		return x.Age
	}
	return 0
}

func (x *BlockPro) GetBook() []string {
	if x != nil {
		return x.Book
	}
	return nil
}

type DoubleSt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Field1  float64 `protobuf:"fixed64,1,opt,name=field1,proto3" json:"field1,omitempty"`
	Field2  float64 `protobuf:"fixed64,2,opt,name=field2,proto3" json:"field2,omitempty"`
	Field3  float64 `protobuf:"fixed64,3,opt,name=field3,proto3" json:"field3,omitempty"`
	Field4  float64 `protobuf:"fixed64,4,opt,name=field4,proto3" json:"field4,omitempty"`
	Field5  float64 `protobuf:"fixed64,5,opt,name=field5,proto3" json:"field5,omitempty"`
	Field6  float64 `protobuf:"fixed64,6,opt,name=field6,proto3" json:"field6,omitempty"`
	Field7  float64 `protobuf:"fixed64,7,opt,name=field7,proto3" json:"field7,omitempty"`
	Field8  float64 `protobuf:"fixed64,8,opt,name=field8,proto3" json:"field8,omitempty"`
	Field9  float64 `protobuf:"fixed64,9,opt,name=field9,proto3" json:"field9,omitempty"`
	Field10 float64 `protobuf:"fixed64,10,opt,name=field10,proto3" json:"field10,omitempty"`
}

func (x *DoubleSt) Reset() {
	*x = DoubleSt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_test_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DoubleSt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DoubleSt) ProtoMessage() {}

func (x *DoubleSt) ProtoReflect() protoreflect.Message {
	mi := &file_test_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DoubleSt.ProtoReflect.Descriptor instead.
func (*DoubleSt) Descriptor() ([]byte, []int) {
	return file_test_proto_rawDescGZIP(), []int{1}
}

func (x *DoubleSt) GetField1() float64 {
	if x != nil {
		return x.Field1
	}
	return 0
}

func (x *DoubleSt) GetField2() float64 {
	if x != nil {
		return x.Field2
	}
	return 0
}

func (x *DoubleSt) GetField3() float64 {
	if x != nil {
		return x.Field3
	}
	return 0
}

func (x *DoubleSt) GetField4() float64 {
	if x != nil {
		return x.Field4
	}
	return 0
}

func (x *DoubleSt) GetField5() float64 {
	if x != nil {
		return x.Field5
	}
	return 0
}

func (x *DoubleSt) GetField6() float64 {
	if x != nil {
		return x.Field6
	}
	return 0
}

func (x *DoubleSt) GetField7() float64 {
	if x != nil {
		return x.Field7
	}
	return 0
}

func (x *DoubleSt) GetField8() float64 {
	if x != nil {
		return x.Field8
	}
	return 0
}

func (x *DoubleSt) GetField9() float64 {
	if x != nil {
		return x.Field9
	}
	return 0
}

func (x *DoubleSt) GetField10() float64 {
	if x != nil {
		return x.Field10
	}
	return 0
}

type Int32St struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Field1  int32 `protobuf:"varint,1,opt,name=field1,proto3" json:"field1,omitempty"`
	Field2  int32 `protobuf:"varint,2,opt,name=field2,proto3" json:"field2,omitempty"`
	Field3  int32 `protobuf:"varint,3,opt,name=field3,proto3" json:"field3,omitempty"`
	Field4  int32 `protobuf:"varint,4,opt,name=field4,proto3" json:"field4,omitempty"`
	Field5  int32 `protobuf:"varint,5,opt,name=field5,proto3" json:"field5,omitempty"`
	Field6  int32 `protobuf:"varint,6,opt,name=field6,proto3" json:"field6,omitempty"`
	Field7  int32 `protobuf:"varint,7,opt,name=field7,proto3" json:"field7,omitempty"`
	Field8  int32 `protobuf:"varint,8,opt,name=field8,proto3" json:"field8,omitempty"`
	Field9  int32 `protobuf:"varint,9,opt,name=field9,proto3" json:"field9,omitempty"`
	Field10 int32 `protobuf:"varint,10,opt,name=field10,proto3" json:"field10,omitempty"`
}

func (x *Int32St) Reset() {
	*x = Int32St{}
	if protoimpl.UnsafeEnabled {
		mi := &file_test_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Int32St) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Int32St) ProtoMessage() {}

func (x *Int32St) ProtoReflect() protoreflect.Message {
	mi := &file_test_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Int32St.ProtoReflect.Descriptor instead.
func (*Int32St) Descriptor() ([]byte, []int) {
	return file_test_proto_rawDescGZIP(), []int{2}
}

func (x *Int32St) GetField1() int32 {
	if x != nil {
		return x.Field1
	}
	return 0
}

func (x *Int32St) GetField2() int32 {
	if x != nil {
		return x.Field2
	}
	return 0
}

func (x *Int32St) GetField3() int32 {
	if x != nil {
		return x.Field3
	}
	return 0
}

func (x *Int32St) GetField4() int32 {
	if x != nil {
		return x.Field4
	}
	return 0
}

func (x *Int32St) GetField5() int32 {
	if x != nil {
		return x.Field5
	}
	return 0
}

func (x *Int32St) GetField6() int32 {
	if x != nil {
		return x.Field6
	}
	return 0
}

func (x *Int32St) GetField7() int32 {
	if x != nil {
		return x.Field7
	}
	return 0
}

func (x *Int32St) GetField8() int32 {
	if x != nil {
		return x.Field8
	}
	return 0
}

func (x *Int32St) GetField9() int32 {
	if x != nil {
		return x.Field9
	}
	return 0
}

func (x *Int32St) GetField10() int32 {
	if x != nil {
		return x.Field10
	}
	return 0
}

type Uint32St struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Field1  uint32 `protobuf:"varint,1,opt,name=field1,proto3" json:"field1,omitempty"`
	Field2  uint32 `protobuf:"varint,2,opt,name=field2,proto3" json:"field2,omitempty"`
	Field3  uint32 `protobuf:"varint,3,opt,name=field3,proto3" json:"field3,omitempty"`
	Field4  uint32 `protobuf:"varint,4,opt,name=field4,proto3" json:"field4,omitempty"`
	Field5  uint32 `protobuf:"varint,5,opt,name=field5,proto3" json:"field5,omitempty"`
	Field6  uint32 `protobuf:"varint,6,opt,name=field6,proto3" json:"field6,omitempty"`
	Field7  uint32 `protobuf:"varint,7,opt,name=field7,proto3" json:"field7,omitempty"`
	Field8  uint32 `protobuf:"varint,8,opt,name=field8,proto3" json:"field8,omitempty"`
	Field9  uint32 `protobuf:"varint,9,opt,name=field9,proto3" json:"field9,omitempty"`
	Field10 uint32 `protobuf:"varint,10,opt,name=field10,proto3" json:"field10,omitempty"`
}

func (x *Uint32St) Reset() {
	*x = Uint32St{}
	if protoimpl.UnsafeEnabled {
		mi := &file_test_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Uint32St) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Uint32St) ProtoMessage() {}

func (x *Uint32St) ProtoReflect() protoreflect.Message {
	mi := &file_test_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Uint32St.ProtoReflect.Descriptor instead.
func (*Uint32St) Descriptor() ([]byte, []int) {
	return file_test_proto_rawDescGZIP(), []int{3}
}

func (x *Uint32St) GetField1() uint32 {
	if x != nil {
		return x.Field1
	}
	return 0
}

func (x *Uint32St) GetField2() uint32 {
	if x != nil {
		return x.Field2
	}
	return 0
}

func (x *Uint32St) GetField3() uint32 {
	if x != nil {
		return x.Field3
	}
	return 0
}

func (x *Uint32St) GetField4() uint32 {
	if x != nil {
		return x.Field4
	}
	return 0
}

func (x *Uint32St) GetField5() uint32 {
	if x != nil {
		return x.Field5
	}
	return 0
}

func (x *Uint32St) GetField6() uint32 {
	if x != nil {
		return x.Field6
	}
	return 0
}

func (x *Uint32St) GetField7() uint32 {
	if x != nil {
		return x.Field7
	}
	return 0
}

func (x *Uint32St) GetField8() uint32 {
	if x != nil {
		return x.Field8
	}
	return 0
}

func (x *Uint32St) GetField9() uint32 {
	if x != nil {
		return x.Field9
	}
	return 0
}

func (x *Uint32St) GetField10() uint32 {
	if x != nil {
		return x.Field10
	}
	return 0
}

type BoolSt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Field1  bool `protobuf:"varint,1,opt,name=field1,proto3" json:"field1,omitempty"`
	Field2  bool `protobuf:"varint,2,opt,name=field2,proto3" json:"field2,omitempty"`
	Field3  bool `protobuf:"varint,3,opt,name=field3,proto3" json:"field3,omitempty"`
	Field4  bool `protobuf:"varint,4,opt,name=field4,proto3" json:"field4,omitempty"`
	Field5  bool `protobuf:"varint,5,opt,name=field5,proto3" json:"field5,omitempty"`
	Field6  bool `protobuf:"varint,6,opt,name=field6,proto3" json:"field6,omitempty"`
	Field7  bool `protobuf:"varint,7,opt,name=field7,proto3" json:"field7,omitempty"`
	Field8  bool `protobuf:"varint,8,opt,name=field8,proto3" json:"field8,omitempty"`
	Field9  bool `protobuf:"varint,9,opt,name=field9,proto3" json:"field9,omitempty"`
	Field10 bool `protobuf:"varint,10,opt,name=field10,proto3" json:"field10,omitempty"`
}

func (x *BoolSt) Reset() {
	*x = BoolSt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_test_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BoolSt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BoolSt) ProtoMessage() {}

func (x *BoolSt) ProtoReflect() protoreflect.Message {
	mi := &file_test_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BoolSt.ProtoReflect.Descriptor instead.
func (*BoolSt) Descriptor() ([]byte, []int) {
	return file_test_proto_rawDescGZIP(), []int{4}
}

func (x *BoolSt) GetField1() bool {
	if x != nil {
		return x.Field1
	}
	return false
}

func (x *BoolSt) GetField2() bool {
	if x != nil {
		return x.Field2
	}
	return false
}

func (x *BoolSt) GetField3() bool {
	if x != nil {
		return x.Field3
	}
	return false
}

func (x *BoolSt) GetField4() bool {
	if x != nil {
		return x.Field4
	}
	return false
}

func (x *BoolSt) GetField5() bool {
	if x != nil {
		return x.Field5
	}
	return false
}

func (x *BoolSt) GetField6() bool {
	if x != nil {
		return x.Field6
	}
	return false
}

func (x *BoolSt) GetField7() bool {
	if x != nil {
		return x.Field7
	}
	return false
}

func (x *BoolSt) GetField8() bool {
	if x != nil {
		return x.Field8
	}
	return false
}

func (x *BoolSt) GetField9() bool {
	if x != nil {
		return x.Field9
	}
	return false
}

func (x *BoolSt) GetField10() bool {
	if x != nil {
		return x.Field10
	}
	return false
}

type DoubleStR struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Field1 []float64 `protobuf:"fixed64,1,rep,packed,name=field1,proto3" json:"field1,omitempty"`
}

func (x *DoubleStR) Reset() {
	*x = DoubleStR{}
	if protoimpl.UnsafeEnabled {
		mi := &file_test_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DoubleStR) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DoubleStR) ProtoMessage() {}

func (x *DoubleStR) ProtoReflect() protoreflect.Message {
	mi := &file_test_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DoubleStR.ProtoReflect.Descriptor instead.
func (*DoubleStR) Descriptor() ([]byte, []int) {
	return file_test_proto_rawDescGZIP(), []int{5}
}

func (x *DoubleStR) GetField1() []float64 {
	if x != nil {
		return x.Field1
	}
	return nil
}

type Int32StR struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Field1 []int32 `protobuf:"varint,1,rep,packed,name=field1,proto3" json:"field1,omitempty"`
}

func (x *Int32StR) Reset() {
	*x = Int32StR{}
	if protoimpl.UnsafeEnabled {
		mi := &file_test_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Int32StR) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Int32StR) ProtoMessage() {}

func (x *Int32StR) ProtoReflect() protoreflect.Message {
	mi := &file_test_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Int32StR.ProtoReflect.Descriptor instead.
func (*Int32StR) Descriptor() ([]byte, []int) {
	return file_test_proto_rawDescGZIP(), []int{6}
}

func (x *Int32StR) GetField1() []int32 {
	if x != nil {
		return x.Field1
	}
	return nil
}

type Uint32StR struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Field1 []uint32 `protobuf:"varint,1,rep,packed,name=field1,proto3" json:"field1,omitempty"`
}

func (x *Uint32StR) Reset() {
	*x = Uint32StR{}
	if protoimpl.UnsafeEnabled {
		mi := &file_test_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Uint32StR) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Uint32StR) ProtoMessage() {}

func (x *Uint32StR) ProtoReflect() protoreflect.Message {
	mi := &file_test_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Uint32StR.ProtoReflect.Descriptor instead.
func (*Uint32StR) Descriptor() ([]byte, []int) {
	return file_test_proto_rawDescGZIP(), []int{7}
}

func (x *Uint32StR) GetField1() []uint32 {
	if x != nil {
		return x.Field1
	}
	return nil
}

type StringStR struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Field1 []string `protobuf:"bytes,1,rep,name=field1,proto3" json:"field1,omitempty"`
}

func (x *StringStR) Reset() {
	*x = StringStR{}
	if protoimpl.UnsafeEnabled {
		mi := &file_test_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StringStR) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StringStR) ProtoMessage() {}

func (x *StringStR) ProtoReflect() protoreflect.Message {
	mi := &file_test_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StringStR.ProtoReflect.Descriptor instead.
func (*StringStR) Descriptor() ([]byte, []int) {
	return file_test_proto_rawDescGZIP(), []int{8}
}

func (x *StringStR) GetField1() []string {
	if x != nil {
		return x.Field1
	}
	return nil
}

type StringSt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Field1  string `protobuf:"bytes,1,opt,name=field1,proto3" json:"field1,omitempty"`
	Field2  string `protobuf:"bytes,2,opt,name=field2,proto3" json:"field2,omitempty"`
	Field3  string `protobuf:"bytes,3,opt,name=field3,proto3" json:"field3,omitempty"`
	Field4  string `protobuf:"bytes,4,opt,name=field4,proto3" json:"field4,omitempty"`
	Field5  string `protobuf:"bytes,5,opt,name=field5,proto3" json:"field5,omitempty"`
	Field6  string `protobuf:"bytes,6,opt,name=field6,proto3" json:"field6,omitempty"`
	Field7  string `protobuf:"bytes,7,opt,name=field7,proto3" json:"field7,omitempty"`
	Field8  string `protobuf:"bytes,8,opt,name=field8,proto3" json:"field8,omitempty"`
	Field9  string `protobuf:"bytes,9,opt,name=field9,proto3" json:"field9,omitempty"`
	Field10 string `protobuf:"bytes,10,opt,name=field10,proto3" json:"field10,omitempty"`
}

func (x *StringSt) Reset() {
	*x = StringSt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_test_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StringSt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StringSt) ProtoMessage() {}

func (x *StringSt) ProtoReflect() protoreflect.Message {
	mi := &file_test_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StringSt.ProtoReflect.Descriptor instead.
func (*StringSt) Descriptor() ([]byte, []int) {
	return file_test_proto_rawDescGZIP(), []int{9}
}

func (x *StringSt) GetField1() string {
	if x != nil {
		return x.Field1
	}
	return ""
}

func (x *StringSt) GetField2() string {
	if x != nil {
		return x.Field2
	}
	return ""
}

func (x *StringSt) GetField3() string {
	if x != nil {
		return x.Field3
	}
	return ""
}

func (x *StringSt) GetField4() string {
	if x != nil {
		return x.Field4
	}
	return ""
}

func (x *StringSt) GetField5() string {
	if x != nil {
		return x.Field5
	}
	return ""
}

func (x *StringSt) GetField6() string {
	if x != nil {
		return x.Field6
	}
	return ""
}

func (x *StringSt) GetField7() string {
	if x != nil {
		return x.Field7
	}
	return ""
}

func (x *StringSt) GetField8() string {
	if x != nil {
		return x.Field8
	}
	return ""
}

func (x *StringSt) GetField9() string {
	if x != nil {
		return x.Field9
	}
	return ""
}

func (x *StringSt) GetField10() string {
	if x != nil {
		return x.Field10
	}
	return ""
}

type MapStR struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Field1 map[int32]string `protobuf:"bytes,1,rep,name=field1,proto3" json:"field1,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *MapStR) Reset() {
	*x = MapStR{}
	if protoimpl.UnsafeEnabled {
		mi := &file_test_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MapStR) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MapStR) ProtoMessage() {}

func (x *MapStR) ProtoReflect() protoreflect.Message {
	mi := &file_test_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MapStR.ProtoReflect.Descriptor instead.
func (*MapStR) Descriptor() ([]byte, []int) {
	return file_test_proto_rawDescGZIP(), []int{10}
}

func (x *MapStR) GetField1() map[int32]string {
	if x != nil {
		return x.Field1
	}
	return nil
}

type MultiSt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Field1 string           `protobuf:"bytes,1,opt,name=field1,proto3" json:"field1,omitempty"`
	Field2 int32            `protobuf:"varint,2,opt,name=field2,proto3" json:"field2,omitempty"`
	Field3 map[int64]string `protobuf:"bytes,3,rep,name=field3,proto3" json:"field3,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Field4 []string         `protobuf:"bytes,4,rep,name=field4,proto3" json:"field4,omitempty"`
}

func (x *MultiSt) Reset() {
	*x = MultiSt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_test_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MultiSt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MultiSt) ProtoMessage() {}

func (x *MultiSt) ProtoReflect() protoreflect.Message {
	mi := &file_test_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MultiSt.ProtoReflect.Descriptor instead.
func (*MultiSt) Descriptor() ([]byte, []int) {
	return file_test_proto_rawDescGZIP(), []int{11}
}

func (x *MultiSt) GetField1() string {
	if x != nil {
		return x.Field1
	}
	return ""
}

func (x *MultiSt) GetField2() int32 {
	if x != nil {
		return x.Field2
	}
	return 0
}

func (x *MultiSt) GetField3() map[int64]string {
	if x != nil {
		return x.Field3
	}
	return nil
}

func (x *MultiSt) GetField4() []string {
	if x != nil {
		return x.Field4
	}
	return nil
}

type MultiStSimpleSt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Field1 string           `protobuf:"bytes,1,opt,name=field1,proto3" json:"field1,omitempty"`
	Field2 int32            `protobuf:"varint,2,opt,name=field2,proto3" json:"field2,omitempty"`
	Field3 map[int64]string `protobuf:"bytes,3,rep,name=field3,proto3" json:"field3,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Field4 []string         `protobuf:"bytes,4,rep,name=field4,proto3" json:"field4,omitempty"`
}

func (x *MultiStSimpleSt) Reset() {
	*x = MultiStSimpleSt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_test_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MultiStSimpleSt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MultiStSimpleSt) ProtoMessage() {}

func (x *MultiStSimpleSt) ProtoReflect() protoreflect.Message {
	mi := &file_test_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MultiStSimpleSt.ProtoReflect.Descriptor instead.
func (*MultiStSimpleSt) Descriptor() ([]byte, []int) {
	return file_test_proto_rawDescGZIP(), []int{11, 1}
}

func (x *MultiStSimpleSt) GetField1() string {
	if x != nil {
		return x.Field1
	}
	return ""
}

func (x *MultiStSimpleSt) GetField2() int32 {
	if x != nil {
		return x.Field2
	}
	return 0
}

func (x *MultiStSimpleSt) GetField3() map[int64]string {
	if x != nil {
		return x.Field3
	}
	return nil
}

func (x *MultiStSimpleSt) GetField4() []string {
	if x != nil {
		return x.Field4
	}
	return nil
}

var File_test_proto protoreflect.FileDescriptor

var file_test_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x74, 0x65, 0x73, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x74, 0x79,
	0x70, 0x65, 0x73, 0x22, 0x44, 0x0a, 0x08, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x50, 0x72, 0x6f, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x03, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x6f, 0x6f, 0x6b, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x04, 0x62, 0x6f, 0x6f, 0x6b, 0x22, 0xfc, 0x01, 0x0a, 0x08, 0x64, 0x6f,
	0x75, 0x62, 0x6c, 0x65, 0x53, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x31,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x31, 0x12, 0x16,
	0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x32, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06,
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x32, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x33,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x33, 0x12, 0x16,
	0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x34, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06,
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x34, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x35,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x35, 0x12, 0x16,
	0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x36, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06,
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x36, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x37,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x37, 0x12, 0x16,
	0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x38, 0x18, 0x08, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06,
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x38, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x39,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x39, 0x12, 0x18,
	0x0a, 0x07, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x31, 0x30, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x07, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x31, 0x30, 0x22, 0xfb, 0x01, 0x0a, 0x07, 0x69, 0x6e, 0x74,
	0x33, 0x32, 0x53, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x31, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x31, 0x12, 0x16, 0x0a, 0x06,
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x32, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x66, 0x69,
	0x65, 0x6c, 0x64, 0x32, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x33, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x33, 0x12, 0x16, 0x0a, 0x06,
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x34, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x66, 0x69,
	0x65, 0x6c, 0x64, 0x34, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x35, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x35, 0x12, 0x16, 0x0a, 0x06,
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x36, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x66, 0x69,
	0x65, 0x6c, 0x64, 0x36, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x37, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x37, 0x12, 0x16, 0x0a, 0x06,
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x38, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x66, 0x69,
	0x65, 0x6c, 0x64, 0x38, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x39, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x39, 0x12, 0x18, 0x0a, 0x07,
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x31, 0x30, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x66,
	0x69, 0x65, 0x6c, 0x64, 0x31, 0x30, 0x22, 0xfc, 0x01, 0x0a, 0x08, 0x75, 0x69, 0x6e, 0x74, 0x33,
	0x32, 0x53, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x31, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x31, 0x12, 0x16, 0x0a, 0x06, 0x66,
	0x69, 0x65, 0x6c, 0x64, 0x32, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x66, 0x69, 0x65,
	0x6c, 0x64, 0x32, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x33, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x33, 0x12, 0x16, 0x0a, 0x06, 0x66,
	0x69, 0x65, 0x6c, 0x64, 0x34, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x66, 0x69, 0x65,
	0x6c, 0x64, 0x34, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x35, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x35, 0x12, 0x16, 0x0a, 0x06, 0x66,
	0x69, 0x65, 0x6c, 0x64, 0x36, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x66, 0x69, 0x65,
	0x6c, 0x64, 0x36, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x37, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x37, 0x12, 0x16, 0x0a, 0x06, 0x66,
	0x69, 0x65, 0x6c, 0x64, 0x38, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x66, 0x69, 0x65,
	0x6c, 0x64, 0x38, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x39, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x39, 0x12, 0x18, 0x0a, 0x07, 0x66,
	0x69, 0x65, 0x6c, 0x64, 0x31, 0x30, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x66, 0x69,
	0x65, 0x6c, 0x64, 0x31, 0x30, 0x22, 0xfa, 0x01, 0x0a, 0x06, 0x62, 0x6f, 0x6f, 0x6c, 0x53, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x31, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x31, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c,
	0x64, 0x32, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x32,
	0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x33, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x33, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c,
	0x64, 0x34, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x34,
	0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x35, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x35, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c,
	0x64, 0x36, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x36,
	0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x37, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x37, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c,
	0x64, 0x38, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x38,
	0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x39, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x39, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x69, 0x65, 0x6c,
	0x64, 0x31, 0x30, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x66, 0x69, 0x65, 0x6c, 0x64,
	0x31, 0x30, 0x22, 0x23, 0x0a, 0x09, 0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x53, 0x74, 0x52, 0x12,
	0x16, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x31, 0x18, 0x01, 0x20, 0x03, 0x28, 0x01, 0x52,
	0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x31, 0x22, 0x22, 0x0a, 0x08, 0x69, 0x6e, 0x74, 0x33, 0x32,
	0x53, 0x74, 0x52, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x31, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x05, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x31, 0x22, 0x23, 0x0a, 0x09, 0x75,
	0x69, 0x6e, 0x74, 0x33, 0x32, 0x53, 0x74, 0x52, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c,
	0x64, 0x31, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x31,
	0x22, 0x23, 0x0a, 0x09, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x52, 0x12, 0x16, 0x0a,
	0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x31, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x66,
	0x69, 0x65, 0x6c, 0x64, 0x31, 0x22, 0xfc, 0x01, 0x0a, 0x08, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x53, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x31, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x31, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69,
	0x65, 0x6c, 0x64, 0x32, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c,
	0x64, 0x32, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x33, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x33, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69,
	0x65, 0x6c, 0x64, 0x34, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c,
	0x64, 0x34, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x35, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x35, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69,
	0x65, 0x6c, 0x64, 0x36, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c,
	0x64, 0x36, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x37, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x37, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69,
	0x65, 0x6c, 0x64, 0x38, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c,
	0x64, 0x38, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x39, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x39, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x69,
	0x65, 0x6c, 0x64, 0x31, 0x30, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x66, 0x69, 0x65,
	0x6c, 0x64, 0x31, 0x30, 0x22, 0x76, 0x0a, 0x06, 0x6d, 0x61, 0x70, 0x53, 0x74, 0x52, 0x12, 0x31,
	0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x31, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x6d, 0x61, 0x70, 0x53, 0x74, 0x52, 0x2e, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x31, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64,
	0x31, 0x1a, 0x39, 0x0a, 0x0b, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x31, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x8d, 0x03, 0x0a,
	0x07, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x53, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c,
	0x64, 0x31, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x31,
	0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x32, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x32, 0x12, 0x32, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c,
	0x64, 0x33, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73,
	0x2e, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x53, 0x74, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x33, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x33, 0x12, 0x16, 0x0a, 0x06,
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x34, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x66, 0x69,
	0x65, 0x6c, 0x64, 0x34, 0x1a, 0x39, 0x0a, 0x0b, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x33, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a,
	0xca, 0x01, 0x0a, 0x08, 0x73, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x53, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x31, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x69,
	0x65, 0x6c, 0x64, 0x31, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x32, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x32, 0x12, 0x3b, 0x0a, 0x06,
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x33, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x74,
	0x79, 0x70, 0x65, 0x73, 0x2e, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x53, 0x74, 0x2e, 0x73, 0x69, 0x6d,
	0x70, 0x6c, 0x65, 0x53, 0x74, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x33, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x33, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x65,
	0x6c, 0x64, 0x34, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64,
	0x34, 0x1a, 0x39, 0x0a, 0x0b, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x33, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x42, 0x07, 0x5a, 0x05,
	0x2f, 0x74, 0x65, 0x73, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_test_proto_rawDescOnce sync.Once
	file_test_proto_rawDescData = file_test_proto_rawDesc
)

func file_test_proto_rawDescGZIP() []byte {
	file_test_proto_rawDescOnce.Do(func() {
		file_test_proto_rawDescData = protoimpl.X.CompressGZIP(file_test_proto_rawDescData)
	})
	return file_test_proto_rawDescData
}

var file_test_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_test_proto_goTypes = []interface{}{
	(*BlockPro)(nil),        // 0: types.BlockPro
	(*DoubleSt)(nil),        // 1: types.doubleSt
	(*Int32St)(nil),         // 2: types.int32St
	(*Uint32St)(nil),        // 3: types.uint32St
	(*BoolSt)(nil),          // 4: types.boolSt
	(*DoubleStR)(nil),       // 5: types.doubleStR
	(*Int32StR)(nil),        // 6: types.int32StR
	(*Uint32StR)(nil),       // 7: types.uint32StR
	(*StringStR)(nil),       // 8: types.stringStR
	(*StringSt)(nil),        // 9: types.stringSt
	(*MapStR)(nil),          // 10: types.mapStR
	(*MultiSt)(nil),         // 11: types.multiSt
	nil,                     // 12: types.mapStR.Field1Entry
	nil,                     // 13: types.multiSt.Field3Entry
	(*MultiStSimpleSt)(nil), // 14: types.multiSt.simpleSt
	nil,                     // 15: types.multiSt.simpleSt.Field3Entry
}
var file_test_proto_depIdxs = []int32{
	12, // 0: types.mapStR.field1:type_name -> types.mapStR.Field1Entry
	13, // 1: types.multiSt.field3:type_name -> types.multiSt.Field3Entry
	15, // 2: types.multiSt.simpleSt.field3:type_name -> types.multiSt.simpleSt.Field3Entry
	3,  // [3:3] is the sub-list for method output_type
	3,  // [3:3] is the sub-list for method input_type
	3,  // [3:3] is the sub-list for extension type_name
	3,  // [3:3] is the sub-list for extension extendee
	0,  // [0:3] is the sub-list for field type_name
}

func init() { file_test_proto_init() }
func file_test_proto_init() {
	if File_test_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_test_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlockPro); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_test_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DoubleSt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_test_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Int32St); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_test_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Uint32St); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_test_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BoolSt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_test_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DoubleStR); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_test_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Int32StR); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_test_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Uint32StR); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_test_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StringStR); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_test_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StringSt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_test_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MapStR); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_test_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MultiSt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_test_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MultiStSimpleSt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_test_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_test_proto_goTypes,
		DependencyIndexes: file_test_proto_depIdxs,
		MessageInfos:      file_test_proto_msgTypes,
	}.Build()
	File_test_proto = out.File
	file_test_proto_rawDesc = nil
	file_test_proto_goTypes = nil
	file_test_proto_depIdxs = nil
}
